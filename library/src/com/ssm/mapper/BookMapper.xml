<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace:名称空间 一般命名规则就是该xml所在的包路径.xml的名称 -->
<mapper namespace="com.ssm.mapper.BookMapper">
	<!-- 通过图书名获得结果 -->
	<!-- 占位符的值由jsp页面提供，一般是页面标签的name属性 -->
	<select id="searchBook" parameterType="book" resultType="book">
		select bid,bname,author,publish,price,num from book
		where bname like '%${bname}%'
	</select>

	<!-- 获得图书列表 -->
	<select id="bookList" parameterType="book" resultType="book">
		select bid,bname,author,publish,price,num from book
	</select>

	<!-- 为什么通过图书id来操作的sql语句parameterType却是book呢？
	因为bid字段也是book的一员，所以可book可int！
	如果bid字段不在book中，只能int -->
	<!-- 通过图书id获得相应的图书详情 -->
	<!-- 占位符的值由jsp页面提供，一般是页面标签的name属性 -->
	<select id="detailBook" parameterType="book" resultType="book">
		select bid,bname,author,publish,price,num from book
		where bid = #{bid}
	</select>

	<!-- 通过图书id获得相应的图书来编辑 -->
	<!-- 占位符的值由jsp页面提供，一般是页面标签的name属性 -->
	<update id="updateBook" parameterType="book">
		update book set bname=#{bname},author=#{author},publish=#{publish},price=#{price},num=#{num}
		where bid=#{bid}
	</update>

	<!-- 通过图书id删除图书 -->
	<!-- 占位符的值由jsp页面提供，一般是页面标签的name属性 -->
	<select id="deleteBook" parameterType="book">
		delete from book
		where bid= #{bid}
	</select>

	<!-- 添加图书 -->
	<insert id="addBook" parameterType="book">
		insert into book(bid,bname,author,publish,price,num)
		values(seq_book.nextval,#{bname},#{author},#{publish},#{price},#{num})
	</insert>
</mapper>