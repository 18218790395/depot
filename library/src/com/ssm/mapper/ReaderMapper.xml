<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace:名称空间 一般命名规则就是该xml所在的包路径.xml的名称 -->
<mapper namespace="com.ssm.mapper.ReaderMapper">
	<!-- 获得读者列表 -->
	<select id="readerList" parameterType="reader" resultType="reader">
		select rid,rname,gender,address,phone from reader
	</select>

	<!-- 为什么通过读者id来操作的sql语句parameterType却是reader呢？
	因为rid字段也是reader的一员，所以可reader可int！
	如果rid字段不在reader中，只能int -->
	<!-- 通过图书id获得相应的图书详情 -->
	<!-- 占位符的值由jsp页面提供，一般是页面标签的name属性 -->
	<select id="detailReader" parameterType="reader" resultType="reader">
		select rid,rname,gender,address,phone from reader
		where rid = #{rid}
	</select>

	<!-- 通过读者id获得相应的读者来编辑 -->
	<!-- 占位符的值由jsp页面提供，一般是页面标签的name属性 -->
	<update id="updateReader" parameterType="reader">
		update reader set rname=#{rname},gender=#{gender},address=#{address},phone=#{phone}
		where rid=#{rid}
	</update>

	<!-- 通过读者id删除读者 -->
	<!-- 占位符的值由jsp页面提供，一般是页面标签的name属性 -->
	<select id="deleteReader" parameterType="reader">
		delete from reader
		where rid= #{rid}
	</select>

	<!-- 添加读者 -->
	<insert id="addReader" parameterType="reader">
		insert into reader(rid,rname,gender,address,phone)
		values(seq_reader.nextval,#{rname},#{gender},#{address},#{phone})
	</insert>
</mapper>